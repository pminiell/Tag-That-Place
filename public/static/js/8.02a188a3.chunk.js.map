{"version":3,"sources":["places/pages/NewPlace.js"],"names":["NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","formState","inputHandler","history","useHistory","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","console","log","process","Authorization","token","push","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled"],"mappings":"0PA8FeA,UA9EE,WACf,IAAMC,EAAOC,qBAAWC,KACxB,EAAsDC,cAA9CC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WACvC,EAAkCC,YAAQ,CACxCC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,KAEX,mBAbKG,EAAS,KAAEC,EAAY,KAexBC,EAAUC,cAEVC,EAAkB,iDAAG,WAAOC,GAAK,iFAOb,OANxBA,EAAMC,iBAAiB,UAEfC,EAAW,IAAIC,UACZC,OAAO,QAAST,EAAUU,OAAOf,MAAMC,OAChDW,EAASE,OAAO,cAAeT,EAAUU,OAAOZ,YAAYF,OAC5DW,EAASE,OAAO,UAAWT,EAAUU,OAAOX,QAAQH,OACpDe,QAAQC,IAAIL,GAAU,SAChBf,EAAY,GAAD,OACZqB,6CAAiC,eACpC,OACAN,EACA,CACEO,cAAe,UAAY5B,EAAK6B,QAElC,KAAD,EACDb,EAAQc,KAAK,KAAK,4GAErB,gBAlBuB,sCAoBxB,OACE,qCACE,cAAC,IAAU,CAACzB,MAAOA,EAAO0B,QAASxB,IACnC,uBAAMyB,UAAU,aAAaC,SAAUf,EAAmB,UACvDd,GAAa,cAAC,IAAc,CAAC8B,WAAS,IACvC,cAAC,IAAK,CACJC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,CAACC,eACbC,UAAU,6BACVC,QAAS3B,IAEX,cAAC,IAAK,CACJoB,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,CAACI,YAAoB,IACjCF,UAAU,4DACVC,QAAS3B,IAEX,cAAC,IAAK,CACJoB,GAAG,UACHC,QAAQ,QACRE,MAAM,UACNC,WAAY,CAACC,eACbC,UAAU,gCACVC,QAAS3B,IAEX,cAAC,IAAM,CAACsB,KAAK,SAASO,UAAW9B,EAAUH,QAAQ,4BAM3D,C","file":"static/js/8.02a188a3.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/utils/validators';\nimport './PlaceForm.css';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false,\n    },\n    description: {\n      value: '',\n      isValid: false,\n    },\n    address: {\n      value: '',\n      isValid: false,\n    },\n  });\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      console.log(formData);\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places`,\n        'POST',\n        formData,\n        {\n          Authorization: 'Bearer ' + auth.token,\n        }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className='place-form' onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id='title'\n          element='input'\n          type='text'\n          label='Title'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid title'\n          onInput={inputHandler}\n        />\n        <Input\n          id='description'\n          element='textarea'\n          label='Description'\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText='Please enter a valid description (at least 5 characters).'\n          onInput={inputHandler}\n        />\n        <Input\n          id='address'\n          element='input'\n          label='Address'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid address.'\n          onInput={inputHandler}\n        />\n        <Button type='submit' disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}