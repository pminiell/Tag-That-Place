{"version":3,"sources":["shared/utils/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initalInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","console","log","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","push","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/5.1eb70bb9.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../utils/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue  || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\"\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId]){\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n      case \"SET_DATA\":\r\n        return {\r\n            inputs: action.inputs,\r\n            isValid: action.formIsValid\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initalInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initalInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState();\r\n  const filePickerRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n      console.log(fileIsValid)\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      ></input>\r\n      <div className={`image-upload ${props.center} $$ center`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport \"./PlaceForm.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm({\r\n    title: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    address: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    image: {\r\n      value: null,\r\n      isValid: false,\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/places`, \"POST\", formData, {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}