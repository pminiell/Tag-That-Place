{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.b82eeba4.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = // due to scoping this variable is different than the tokenExpirationDate in the app component\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./NavLinks.css\";\n\nimport { AuthContext } from \"../../context/auth-context\";\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport \"./SideDrawer.css\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport \"./MainNavigation.css\";\nimport MainHeader from \"./MainHeader\";\nimport { Link } from \"react-router-dom\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from '../UIElements/Backdrop';\n\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerOpen] = useState(false);\n  \n  const openDrawerHandler = () =>{\n      setDrawerOpen(true);\n  }\n  \n  const closeDrawerHandler = () => {\n      setDrawerOpen(false);\n  }\n\n  return (\n    <>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>}\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n          <nav className=\"main-navigation__drawer-nav\">\n            <NavLinks />\n          </nav>\n        </SideDrawer>\n      \n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Tag-That-Place</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/places/new' exact>\n          <NewPlace />\n        </Route>\n        <Route path='/places/:placeId'>\n          <UpdatePlace />\n        </Route>\n        <Redirect to='/' />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/auth'>\n          <Auth />\n        </Route>\n        <Redirect to='/auth' />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        login: login,\n        logout: logout,\n        userId: userId,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className='center'>\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}