{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteWarningHandler","confirmDeleteHandler","a","console","log","id","process","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.c830df39.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n  \r\n  const { center , zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./PlaceItem.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => {\r\n    setShowMap(true);\r\n  };\r\n\r\n  const closeMapHandler = () => {\r\n    setShowMap(false);\r\n  };\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteWarningHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    console.log(props.id);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>X</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteWarningHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteWarningHandler}>\r\n              Cancel\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              Delete\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>Proceeding will permanently delete place ! This can't be undone !</p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport \"./PlaceList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Places</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/users/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}