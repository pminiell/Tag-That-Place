{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.d7482c9e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = // due to scoping this variable is different than the tokenExpirationDate in the app component\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavLinks.css\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport \"./SideDrawer.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport \"./MainNavigation.css\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerOpen] = useState(false);\r\n  \r\n  const openDrawerHandler = () =>{\r\n      setDrawerOpen(true);\r\n  }\r\n  \r\n  const closeDrawerHandler = () => {\r\n      setDrawerOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>}\r\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n          <nav className=\"main-navigation__drawer-nav\">\r\n            <NavLinks />\r\n          </nav>\r\n        </SideDrawer>\r\n      \r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Tag-That-Place</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        login: login,\n        logout: logout,\n        userId: userId,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}