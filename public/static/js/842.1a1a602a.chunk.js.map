{"version":3,"file":"static/js/842.1a1a602a.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/Input.js","shared/components/FormElements/imageUpload.js","shared/hooks/form-hook.js","shared/utils/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/utils/validators';\nimport './PlaceForm.css';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false,\n    },\n    description: {\n      value: '',\n      isValid: false,\n    },\n    address: {\n      value: '',\n      isValid: false,\n    },\n    image: {\n      value: null,\n      isValid: false,\n    },\n  });\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places`,\n        'POST',\n        formData,\n        {\n          Authorization: 'Bearer ' + auth.token,\n        }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className='place-form' onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id='title'\n          element='input'\n          type='text'\n          label='Title'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid title'\n          onInput={inputHandler}\n        />\n        <Input\n          id='description'\n          element='textarea'\n          label='Description'\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText='Please enter a valid description (at least 5 characters).'\n          onInput={inputHandler}\n        />\n        <Input\n          id='address'\n          element='input'\n          label='Address'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid address.'\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id='image'\n          onInput={inputHandler}\n          errorText='Please provide an image'\n        />\n        <Button type='submit' disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPlace;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../utils/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue  || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState();\n  const filePickerRef = useRef();\n\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n      console.log(fileIsValid)\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      ></input>\n      <div className={`image-upload ${props.center} $$ center`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if(!state.inputs[inputId]){\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n      case \"SET_DATA\":\n        return {\n            inputs: action.inputs,\n            isValid: action.formIsValid\n        };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initalInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initalInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n\nexport default useForm;\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","history","useHistory","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","inputReducer","state","action","val","validate","isTouched","props","useReducer","initialValue","initialValid","inputState","dispatch","useEffect","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","length","console","log","center","src","alt","Button","onClick","current","click","formReducer","formIsValid","inputId","initalInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}